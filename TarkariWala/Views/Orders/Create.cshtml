@model TarkariWala.Models.Order

@{
    ViewBag.Title = "Create";
}

<h2>Orders</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
  <div class="container">

    <div class="form-horizontal">
       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ClientID, "ClientID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class=" input-group col-md-10">
                        @Html.DropDownList("ClientID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })
                        <div class="input-group-append">
                            <button type="button" class="btn-success" data-toggle="modal" data-target="#ClientsCreateModal">
                                <i class="fa fa-plus-circle"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductID, "ProductID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="input-group col-md-10">
                        @Html.DropDownList("ProductID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
                        <div class="input-group-append">
                            <button type="button" class="btn-success" data-toggle="modal" data-target="#ProductsCreateModal">
                                <i class="fa fa-plus-circle"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.DeliveryTime, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DeliveryTime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DeliveryTime, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
  </div>
 }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }

<div class="modal fade" id="ClientsCreateModal" tabindex="-1" role="dialog" aria-labelledby="ClientsCreateModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">

        @Html.Action("ClientsCreateModal", "Orders")

    </div>
</div>

<div class="modal fade" id="ProductsCreateModal" tabindex="-1" role="dialog" aria-labelledby="ProductsCreateModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">

        @Html.Action("ProductsCreateModal", "Orders")

    </div>
</div>
