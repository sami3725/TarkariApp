@model TarkariWala.Models.Client

@{
    ViewBag.Title = "Create";
}

<h2>Clients</h2>
<div class="container">
@using (Html.BeginForm("Create", "Clients"))
    {
        @Html.AntiForgeryToken()

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
  <div class="form-row">
    <div class="col-md-4">
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.AddressID, "AddressID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="input-group col-md-10">
                    @Html.DropDownList("AddressID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AddressID, "", new { @class = "text-danger" })
                    <div class="input-group-append">
                        <button type="button" class="btn-success" data-toggle="modal" data-target="#AddressesCreateModal">
                            <i class="fa fa-plus-circle"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.PermanentAddressID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PermanentAddressID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PermanentAddressID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.TemporaryAddressID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TemporaryAddressID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TemporaryAddressID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.RefferClientCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RefferClientCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RefferClientCode, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
             <div class="form-group">
                  <div class="col-md-offset-2 col-md-10">
                     <input type="submit" value="Create" class="btn btn-outline-dark" />
                  </div>
             </div>

   </div>
     
   }
</div>
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
<div class="modal fade" id="AddressesCreateModal" tabindex="-1" role="dialog" aria-labelledby="AddressesCreateModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">

        @Html.Action("AddressesCreateModal", "Clients")

    </div>
</div>
